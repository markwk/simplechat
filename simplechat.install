<?php
/**
 * @file
 * Install, update, and uninstall functions for the whiteboard module.
 *
 * @see http://drupal.org/node/146939
 * @see schemaapi
 * @see hook_field_schema()
 * @ingroup field_example
 */
/**
 * Implements hook_field_schema().
 */
function simplechat_field_schema($field) {
  if ($field['type'] == 'simplechat_app') {
      $schema['columns']= array(
        'show_simplechat' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      )
    );
  }
   return $schema;
}

/**
 * Implements hook_install().
 */
function simplechat_install() {
  drupal_set_message(t('Simple Chat module enabled.'));
}
/**
 * Implements hook_chema().
 */
function simplechat_schema() {
	  $schema['simplechat_chat'] = array(
	    'fields' => array(
	      'nid' => array(
	        'type' => 'int',
	        'not null' => TRUE,
	        'description' => 'Primary key: node ID of the chat.',
	      ),
	      'crid' => array(
	        'type' => 'int',
	        'not null' => TRUE,
	        'default' => 0,
	        'description' => 'ID of the chatroom the chat belongs to. 0 signifies this chat does not belong to a room.',
	      ),
	      'module' => array(
	        'type' => 'varchar',
	        'length' => '255',
	        'default' => 'simplechat',
	        'description' => 'The module that owns this chat.',
	      ),
	      'previous_messages_display_count' => array(
	        'type' => 'int',
	        'default' => 20,
	        'description' => 'The number of previous messages to display to a user when they first enter a chat.',
	      ),
	      'when_archived' => array(
	        'type' => 'int',
	        'description' => 'UNIX timestamp of when the chat was last archived.',
	      ),
	      'profile_picture' => array(
	        'type' => 'int',
	        'default' => 0,
	        'description' => 'Whether to display user profile pictures in online lists for this chat.',
	      ),
	      'imagecache_preset' => array(
	        'type' => 'varchar',
	        'length' => '255',
	        'description' => 'Imagecache preset for this chat.',
	      ),
	      'max_users' => array(
	        'type' => 'int',
	        'default' => 0,
	        'description' => 'Max users for this chat.',
	      ),
	    ),
	    'indexes' => array(
	      'crid' => array('crid'),
	    ),
	    'primary key' => array('nid'),
	  );
	  $schema['simplechat_msg'] = array(
	    'fields' => array(
	      'cmid' => array(
	        'type' => 'serial',
	        'unsigned' => TRUE,
	        'not null' => TRUE,
	      ),
	      'ccid' => array(
	        'type' => 'int',
	        'not null' => TRUE,
	        'default' => 0,
	      ),
	      'uid' => array(
	        'type' => 'int',
	        'not null' => TRUE,
	        'default' => 0,
	      ),
	      'msg_type' => array(
	        'type' => 'varchar',
	        'length' => '64',
	        'not null' => TRUE,
	      ),
	      'msg' => array(
	        'type' => 'text',
	        'size' => 'big',
	      ),
	      'anon_name' => array(
	        'type' => 'varchar',
	        'length' => '256',
	        'not null' => TRUE,
	      ),
	      'sid' => array(
	        'type' => 'varchar',
	        'length' => '64',
	        'default' => '',
	        'not null' => TRUE,
	      ),
	      'recipient_uid' => array(
	        'type' => 'int',
	        'not null' => TRUE,
	        'default' => 0,
	      ),
	      'modified' => array(
	        'type' => 'int',
	        'not null' => TRUE,
	        'default' => 0,
	      ),
	    ),
	    'indexes' => array(
	      'ccid' => array('ccid'),
	      'modified' => array('modified'),
	      'recipient_uid' => array('recipient_uid'),
	      'sid' => array('sid'),
	    ),
	    'primary key' => array('cmid'),
	  );
	  return $schema;
}	
/**
 * Implements hook_uninstall().
 */
function simplechat_uninstall() {
	variable_del('simplechat_maxusers');
	variable_del('simplechat_chat_date_format');
	variable_del('simplechat_chat_message_text');
}	